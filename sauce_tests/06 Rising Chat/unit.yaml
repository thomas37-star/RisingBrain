assertions:
  - id: post
    children:
      - id: body
        contentType: application/json
        content: >-
          {
              
              "history": [{
                      "role": "system",
                      "content": "You are a helpful assistant."
                  },
                  {
                      "role": "user",
                      "content": "Who won the world series in 2020?"
                  },
                  {
                      "role": "assistant",
                      "content": "The Los Angeles Dodgers won the World Series in 2020."
                  }
              ],
              "user_input": "Where was it played?",
              "confs": {
                "token": "test_token",
                "uuid": "test_uuid",
                "openai_key": "${OPENAI_API_KEY}",
                "pinecone_key": "${PINECONE_KEY}",
                "pinecone_env": "${PINECONE_ENV}",
                "firebase_key": "${FIREBASE_ENV}",
                "settings": {
                    "temperature": 0.6
                }
              }
          }
    url: ${protocol}${domain}${endpoint}
    var: payload
    mode: json
  - id: assert-equals
    expression: payload_response.headers['Content-Type']
    value: application/json
  - id: assert-exists
    expression: payload
  - id: assert-is
    expression: payload.message
    type: array
  - id: each
    children:
      - id: assert-exists
        expression: _1
    expression: payload.message
  - id: assert-exists
    expression: payload.result
  - id: assert-exists
    expression: payload.result.program
  - id: assert-exists
    expression: payload.result.message
  - id: assert-exists
    expression: payload.result.message.role
  - id: assert-exists
    expression: payload.result.message.content
  - id: assert-is
    expression: payload.status_code
    type: integer
configs: []